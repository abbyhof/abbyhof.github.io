[
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Welcome to my Blog! A lot of things are important and require seriousness, but…\n\nThis is a picture of my favorite cat Sam. He is 25 pounds, but all of it is so lovable and cute!"
  },
  {
    "objectID": "posts/starwars/starwars_df.html",
    "href": "posts/starwars/starwars_df.html",
    "title": "Starwars",
    "section": "",
    "text": "Let’s analyze the starwars data:\nstarwars &lt;- read_csv(\"https://bcdanl.github.io/data/starwars.csv\")"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "href": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "title": "Starwars",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nfilms List of films the character appeared in\nname Name of the character\nspecies Name of species\nheight Height (cm)\nmass Weight (kg)\nhair_color, skin_color, eye_color Hair, skin, and eye colors\nbirth_year Year born (BBY = Before Battle of Yavin)\nsex The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).\ngender The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).\nhomeworld Name of homeworld"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#human-vs.-droid",
    "href": "posts/starwars/starwars_df.html#human-vs.-droid",
    "title": "Starwars",
    "section": "Human vs. Droid",
    "text": "Human vs. Droid\n\nggplot(data = \n         starwars %&gt;% \n         filter(species %in% c(\"Human\", \"Droid\"))) +\n  geom_boxplot(aes(x = species, y = mass, \n                   fill = species),\n               show.legend = FALSE)"
  },
  {
    "objectID": "posts/beer-markets/beer-markets.html",
    "href": "posts/beer-markets/beer-markets.html",
    "title": "Beer Markets",
    "section": "",
    "text": "Let’s analyze the beer_data data:\nbeer_data &lt;- read_csv(\"https://bcdanl.github.io/data/beer_markets.csv\")"
  },
  {
    "objectID": "posts/beer-markets/beer-markets.html#variable-description-for-beer_data-data.frame",
    "href": "posts/beer-markets/beer-markets.html#variable-description-for-beer_data-data.frame",
    "title": "Beer Markets",
    "section": "Variable Description for beer_data data.frame",
    "text": "Variable Description for beer_data data.frame\nThe following describes the variables in the beer_data data.frame.\n\nhh: Household identifier\n_purchase_desc: Description of the purchase\nquantity: The quantity of beer purchased\nbrand: The brand of beer\ndollar_spent: The amount spent\nbeer_floz: Fluid ounces of beer\nprice_per_floz: Price per fluid ounce\ncontainer: Type of container\npromo: Whether the purchase was on promotion\nmarket: The market where the purchase was made\nDemographics: age, employment status, degree, class of worker (cow), race, and household information like microwave, dishwasher, tvcable, singlefamilyhome, and npeople (number of people in the household)"
  },
  {
    "objectID": "posts/beer-markets/beer-markets.html#purchase-patterns",
    "href": "posts/beer-markets/beer-markets.html#purchase-patterns",
    "title": "Beer Markets",
    "section": "Purchase Patterns",
    "text": "Purchase Patterns\nWe’ll explore the purchase patterns in the dataset. This includes understanding the most popular brands, the average quantity purchased, and spending habits across different markets. Here are some specific analyses we can perform:\n\nCalculate the total quantity and spending for each brand.\nFind the average quantity purchased and average spending per purchase.\nCompare the total spending across different markets.\n\nI’ll begin with these analyses and create visualizations to help us understand the data better. Let’s start by calculating the total quantity and spending for each brand."
  },
  {
    "objectID": "posts/beer-markets/beer-markets.html#demographic-analysis",
    "href": "posts/beer-markets/beer-markets.html#demographic-analysis",
    "title": "Beer Markets",
    "section": "Demographic Analysis",
    "text": "Demographic Analysis\nWe will examine which demographics are buying what kind of beer and whether spending habits vary by demographics such as age, employment, and race. For this, we could look at:\n\nSpending by age group\nSpending by employment status\nSpending by race\n\nI’ll start by analyzing spending by age group.\n\n# Calculate total spending by age group\nage_group_spending = beer_data.groupby('age').agg({'dollar_spent':'sum'}).reset_index()\n\n# Sort by total spending\nage_group_spending_sorted = age_group_spending.sort_values('dollar_spent', ascending=False)\n\n# Plotting total spending by age group\nplt.figure(figsize=(10, 6))\nsns.barplot(x='dollar_spent', y='age', data=age_group_spending_sorted, palette='viridis')\nplt.title('Total Spending on Beer by Age Group')\nplt.xlabel('Total Spending')\nplt.ylabel('Age Group')\nplt.show()\n\n\n\n\nThe bar chart demonstrates the total spending on beer segmented by age group, highlighting which age groups spend the most on beer. It appears that certain age groups are more dominant in beer spending, which may align with the purchasing power or preferences of those groups.\nNext, we will examine spending by employment status.\n\n# Calculate total spending by employment status\nemployment_spending = beer_data.groupby('employment').agg({'dollar_spent':'sum'}).reset_index()\n\n# Sort by total spending\nemployment_spending_sorted = employment_spending.sort_values('dollar_spent', ascending=False)\n\n# Plotting total spending by employment status\nplt.figure(figsize=(10, 6))\nsns.barplot(x='dollar_spent', y='employment', data=employment_spending_sorted, palette='viridis')\nplt.title('Total Spending on Beer by Employment Status')\nplt.xlabel('Total Spending')\nplt.ylabel('Employment Status')\nplt.show()\n\n\n\n\nThe visualization shows the total spending on beer by employment status. We can see that certain employment groups, such as full-time workers, are spending more on beer, which might be related to their disposable income.\nFinally, let’s look at spending by race to complete the demographic analysis.\n\n# Calculate total spending by race\nrace_spending = beer_data.groupby('race').agg({'dollar_spent':'sum'}).reset_index()\n\n# Sort by total spending\nrace_spending_sorted = race_spending.sort_values('dollar_spent', ascending=False)\n\n# Plotting total spending by race\nplt.figure(figsize=(10, 6))\nsns.barplot(x='dollar_spent', y='race', data=race_spending_sorted, palette='viridis')\nplt.title('Total Spending on Beer by Race')\nplt.xlabel('Total Spending')\nplt.ylabel('Race')\nplt.show()\n\n\n\n\nThe bar chart above indicates the total spending on beer broken down by race, highlighting which racial groups account for the most beer spending within the dataset. This could reflect both the demographics of the regions where the data was collected and cultural preferences regarding beer.\nNow, let’s proceed to the third analysis:"
  },
  {
    "objectID": "posts/beer-markets/beer-markets.html#price-sensitivity",
    "href": "posts/beer-markets/beer-markets.html#price-sensitivity",
    "title": "Beer Markets",
    "section": "Price Sensitivity",
    "text": "Price Sensitivity\nWe’ll look at the price per fluid ounce and see if there are any trends or correlations with the quantity purchased or the brand popularity. To do this, we’ll calculate the average price per fluid ounce for each brand and then visualize how this relates to the average quantity purchased and the total quantity purchased by brand.\nFirst, let’s calculate the average price per fluid ounce for each brand.\n\n# Calculate average price per fluid ounce for each brand\nbrand_price_sensitivity = beer_data.groupby('brand').agg({\n    'price_per_floz': 'mean', \n    'quantity': 'sum'\n}).reset_index()\n\n# Sort by price per fluid ounce\nbrand_price_sensitivity_sorted = brand_price_sensitivity.sort_values('price_per_floz', ascending=True)\n\n# Plotting average price per fluid ounce for each brand and the total quantity purchased\nfig, ax1 = plt.subplots(figsize=(12, 10))\n\ncolor = 'tab:red'\nax1.set_xlabel('Brand')\nax1.set_ylabel('Average Price per Fluid Ounce', color=color)\nax1.bar(brand_price_sensitivity_sorted['brand'], brand_price_sensitivity_sorted['price_per_floz'], color=color)\nax1.tick_params(axis='y', labelcolor=color)\nax1.set_xticklabels(brand_price_sensitivity_sorted['brand'], rotation=90)\n\nax2 = ax1.twinx()  # instantiate a second axes that shares the same x-axis\ncolor = 'tab:blue'\nax2.set_ylabel('Total Quantity Purchased', color=color)  # we already handled the x-label with ax1\nax2.plot(brand_price_sensitivity_sorted['brand'], brand_price_sensitivity_sorted['quantity'], color=color)\nax2.tick_params(axis='y', labelcolor=color)\n\nfig.tight_layout()  # otherwise the right y-label is slightly clipped\nplt.title('Average Price per Fluid Ounce & Total Quantity Purchased by Brand')\nplt.show()\n\n\n\n\nIn the visualization, we have a bar graph showing the average price per fluid ounce for each brand (in red) and a line graph showing the total quantity purchased for each brand (in blue). This gives us a sense of whether there’s a relationship between the price and the quantity purchased. The x-axis labels are quite compressed due to the number of brands, but we can still observe trends such as whether lower-priced beers tend to be purchased in larger quantities.\nLastly, let’s move to the fourth analysis:"
  },
  {
    "objectID": "posts/beer-markets/beer-markets.html#promotional-impact",
    "href": "posts/beer-markets/beer-markets.html#promotional-impact",
    "title": "Beer Markets",
    "section": "Promotional Impact",
    "text": "Promotional Impact\nWe’ll assess the impact of promotions on the quantity of beer purchased. For this analysis, we can calculate the average quantity purchased with and without promotions and visualize the difference. We’ll do this for each brand to see which brands are most affected by promotions.\nLet’s begin this analysis by looking at the average quantity purchased with and without promotions for each brand.\n\n# Calculate average quantity purchased with and without promotions for each brand\npromo_impact = beer_data.groupby(['brand', 'promo']).agg({'quantity':'mean'}).reset_index()\n\n# Pivot the data to have promo and non-promo side by side for each brand\npromo_impact_pivot = promo_impact.pivot(index='brand', columns='promo', values='quantity').reset_index()\npromo_impact_pivot.columns = ['brand', 'non_promo', 'promo']\n\n# Calculate the difference in average quantity purchased between promo and non-promo\npromo_impact_pivot['promo_impact'] = promo_impact_pivot['promo'] - promo_impact_pivot['non_promo']\n\n# Sort by the impact of promo\npromo_impact_pivot_sorted = promo_impact_pivot.sort_values('promo_impact', ascending=False)\n\n# Plotting the difference in average quantity purchased between promo and non-promo for each brand\nplt.figure(figsize=(12, 10))\nsns.barplot(x='promo_impact', y='brand', data=promo_impact_pivot_sorted, palette='viridis')\nplt.title('Impact of Promotions on Average Quantity Purchased by Brand')\nplt.xlabel('Difference in Average Quantity Purchased (Promo - Non-Promo)')\nplt.ylabel('Brand')\nplt.show()\n\n\n\n\nThe bar chart illustrates the impact of promotions on the average quantity of beer purchased by brand. A positive value indicates that, on average, more beer is purchased when there is a promotion compared to when there isn’t. Some brands appear to be significantly more influenced by promotions, with customers buying more when the products are on sale or promotion.\nThis comprehensive analysis has provided insights into purchase patterns, demographic preferences, price sensitivity, and the impact of promotions on beer purchases."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Abby Hofschneider",
    "section": "",
    "text": "Abby Hofschneider majors in Business Administration at SUNY Geneseo. When not working on data analytics, Abby enjoys spending time with friends and watching movies!"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Abby Hofschneider",
    "section": "Education",
    "text": "Education\nState University of New York at Geneseo | Geneseo, NY  Business Administration Major | Aug 2022 - May 2026"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Abby Hofschneider",
    "section": "Experience",
    "text": "Experience\nHome Depot Cashier | May 2023 - Now |  Technical Theatre Worker | August 2022 - Now |"
  },
  {
    "objectID": "blog-listing.html",
    "href": "blog-listing.html",
    "title": "Insightful Analytics",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nNFL\n\n\n\n\n\n\n\n\n\nDec 12, 2023\n\n\nAbby Hofschneider\n\n\n5 min\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\n\nDec 11, 2023\n\n\nAbby Hofschneider\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\nSpotify\n\n\n\n\n\n\n\n\n\nDec 11, 2023\n\n\nAbby Hofschneider\n\n\n2 min\n\n\n\n\n\n\n  \n\n\n\n\nNYC Restaurant Inspection\n\n\n\n\n\n\n\n\n\nDec 11, 2023\n\n\nAbby Hofschneider\n\n\n2 min\n\n\n\n\n\n\n  \n\n\n\n\nBeer Markets\n\n\n\n\n\n\n\n\n\nDec 11, 2023\n\n\nAbby Hofschneider\n\n\n3 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "DANL Project",
    "section": "",
    "text": "This project is to show my understanding of data analytics and how to use R studio with the data from Goalies.csv! https://www.kaggle.com/datasets/open-source-sports/professional-hockey-database?select=Goalies.csv"
  },
  {
    "objectID": "project.html#summary-statistics",
    "href": "project.html#summary-statistics",
    "title": "DANL Project",
    "section": "2.1 Summary Statistics",
    "text": "2.1 Summary Statistics\n\nrmarkdown::paged_table(Goalies)\n\n\n\n  \n\n\n\n\nskim(Goalies) %&gt;%\n  select(-n_missing)\n\n\nData summary\n\n\nName\nGoalies\n\n\nNumber of rows\n4278\n\n\nNumber of columns\n23\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n20\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\nskim_variable\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nplayerID\n1\n7\n9\n0\n788\n0\n\n\ntmID\n1\n3\n3\n0\n115\n0\n\n\nlgID\n1\n3\n4\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nyear\n1.00\n1980.64\n24.53\n1909\n1972\n1986.0\n1999.0\n2011\n▁▁▂▇▇\n\n\nstint\n1.00\n1.06\n0.24\n1\n1\n1.0\n1.0\n3\n▇▁▁▁▁\n\n\nGP\n1.00\n26.55\n21.03\n1\n7\n23.0\n43.0\n79\n▇▅▃▃▁\n\n\nMin\n1.00\n1502.28\n1238.96\n0\n336\n1257.0\n2467.0\n4697\n▇▅▃▂▁\n\n\nW\n1.00\n11.02\n10.67\n0\n2\n8.0\n18.0\n48\n▇▃▂▁▁\n\n\nL\n1.00\n10.54\n8.77\n0\n3\n9.0\n17.0\n48\n▇▅▂▁▁\n\n\nT.OL\n1.00\n3.25\n3.55\n0\n0\n2.0\n5.0\n22\n▇▂▁▁▁\n\n\nENG\n0.83\n1.71\n1.93\n0\n0\n1.0\n3.0\n12\n▇▂▁▁▁\n\n\nSHO\n1.00\n1.43\n2.21\n0\n0\n0.0\n2.0\n22\n▇▁▁▁▁\n\n\nGA\n1.00\n76.37\n60.43\n0\n20\n68.0\n122.0\n310\n▇▅▃▁▁\n\n\nSA\n0.63\n734.72\n610.57\n0\n165\n604.0\n1205.0\n2488\n▇▅▃▂▁\n\n\nPostGP\n0.34\n6.07\n5.19\n1\n2\n5.0\n8.0\n26\n▇▂▁▁▁\n\n\nPostMin\n0.34\n353.04\n327.80\n0\n120\n252.0\n490.5\n1655\n▇▃▁▁▁\n\n\nPostW\n0.34\n2.81\n3.63\n0\n0\n1.0\n4.0\n16\n▇▂▁▁▁\n\n\nPostL\n0.34\n2.81\n2.20\n0\n1\n3.0\n4.0\n11\n▇▅▂▁▁\n\n\nPostT\n0.02\n0.62\n0.75\n0\n0\n0.5\n1.0\n4\n▇▆▁▁▁\n\n\nPostENG\n0.28\n0.46\n0.74\n0\n0\n0.0\n1.0\n5\n▇▁▁▁▁\n\n\nPostSHO\n0.34\n0.42\n0.85\n0\n0\n0.0\n1.0\n7\n▇▁▁▁▁\n\n\nPostGA\n0.34\n16.12\n13.65\n0\n6\n13.0\n23.0\n74\n▇▅▂▁▁\n\n\nPostSA\n0.19\n183.65\n175.92\n0\n41\n136.0\n265.0\n849\n▇▃▁▁▁"
  },
  {
    "objectID": "project.html#mpg-and-a-type-of-cars",
    "href": "project.html#mpg-and-a-type-of-cars",
    "title": "DANL Project",
    "section": "2.2 MPG and a Type of Cars",
    "text": "2.2 MPG and a Type of Cars\nThe following boxplot shows how the distribution of highway MPG (hwy) varies by a type of cars (class) :blue_car: :truck: :minibus:.\n\nggplot(data = mpg) +\n  geom_boxplot(aes(x = class, y = hwy, fill = class),\n               show.legend = F) +\n  labs(x = \"Class\", y = \"Highway\\nMPG\")"
  },
  {
    "objectID": "posts/starwars - Copy/starwars_df.html",
    "href": "posts/starwars - Copy/starwars_df.html",
    "title": "Starwars",
    "section": "",
    "text": "Let’s analyze the starwars data:\nstarwars &lt;- read_csv(\"https://bcdanl.github.io/data/starwars.csv\")"
  },
  {
    "objectID": "posts/starwars - Copy/starwars_df.html#variable-description-for-starwars-data.frame",
    "href": "posts/starwars - Copy/starwars_df.html#variable-description-for-starwars-data.frame",
    "title": "Starwars",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nfilms List of films the character appeared in\nname Name of the character\nspecies Name of species\nheight Height (cm)\nmass Weight (kg)\nhair_color, skin_color, eye_color Hair, skin, and eye colors\nbirth_year Year born (BBY = Before Battle of Yavin)\nsex The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).\ngender The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).\nhomeworld Name of homeworld"
  },
  {
    "objectID": "posts/starwars - Copy/starwars_df.html#human-vs.-droid",
    "href": "posts/starwars - Copy/starwars_df.html#human-vs.-droid",
    "title": "Starwars",
    "section": "Human vs. Droid",
    "text": "Human vs. Droid\n\nggplot(data = \n         starwars %&gt;% \n         filter(species %in% c(\"Human\", \"Droid\"))) +\n  geom_boxplot(aes(x = species, y = mass, \n                   fill = species),\n               show.legend = FALSE)"
  },
  {
    "objectID": "posts/Spotify/starwars_df.html",
    "href": "posts/Spotify/starwars_df.html",
    "title": "Spotify",
    "section": "",
    "text": "Let’s analyze the spotify data:\n\nspotify &lt;- read_csv(\"https://bcdanl.github.io/data/spotify_all.csv\")\n\nrmarkdown::paged_table(spotify) \n\n\n\n  \n\n\n\nQ1a &lt;- spotify %&gt;% \n  count(artist_name, track_name) %&gt;% \n  arrange(-n) %&gt;% \n  head(10)\n\n\nQ1c &lt;- spotify %&gt;% \n  group_by(artist_name) %&gt;% \n  mutate(n_popular_artist = n()) %&gt;% \n  ungroup() %&gt;% \n  mutate( artist_ranking = dense_rank( desc(n_popular_artist) ) ) %&gt;% \n  filter( artist_ranking &lt;= 10) \n  \n# boxplot\nggplot(Q1c,\n       aes(x = pos, y = fct_reorder(artist_name, -artist_ranking)) ) +\n  geom_boxplot() +\n  stat_summary(\n    fun = mean,\n    color = 'red'\n  )\n\n\n\n# histogram\nggplot(Q1c) +\n  geom_histogram(aes(x = pos), binwidth = 1) + \n  facet_grid(fct_reorder(artist_name, artist_ranking) ~ .  , switch = \"y\") +\n  theme(strip.text.y.left = element_text(angle = 0))"
  },
  {
    "objectID": "posts/Spotify/starwars_df.html#variable-description-for-starwars-data.frame",
    "href": "posts/Spotify/starwars_df.html#variable-description-for-starwars-data.frame",
    "title": "Spotify",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nfilms List of films the character appeared in\nname Name of the character\nspecies Name of species\nheight Height (cm)\nmass Weight (kg)\nhair_color, skin_color, eye_color Hair, skin, and eye colors\nbirth_year Year born (BBY = Before Battle of Yavin)\nsex The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).\ngender The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).\nhomeworld Name of homeworld"
  },
  {
    "objectID": "posts/Spotify/starwars_df.html#human-vs.-droid",
    "href": "posts/Spotify/starwars_df.html#human-vs.-droid",
    "title": "Spotify",
    "section": "Human vs. Droid",
    "text": "Human vs. Droid\n\nggplot(data = \n         starwars %&gt;% \n         filter(species %in% c(\"Human\", \"Droid\"))) +\n  geom_boxplot(aes(x = species, y = mass, \n                   fill = species),\n               show.legend = FALSE)"
  },
  {
    "objectID": "posts/NYC Restaurant Inspection/index.html",
    "href": "posts/NYC Restaurant Inspection/index.html",
    "title": "NYC Restaurant Inspection",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/Spotify/spotify.html",
    "href": "posts/Spotify/spotify.html",
    "title": "Spotify",
    "section": "",
    "text": "Let’s analyze the spotify data:\n\nspotify &lt;- read_csv(\"https://bcdanl.github.io/data/spotify_all.csv\")\n\nrmarkdown::paged_table(spotify) \n\n\n\n  \n\n\n\nQ1a &lt;- spotify %&gt;% \n  count(artist_name, track_name) %&gt;% \n  arrange(-n) %&gt;% \n  head(10)\n\n\nQ1c &lt;- spotify %&gt;% \n  group_by(artist_name) %&gt;% \n  mutate(n_popular_artist = n()) %&gt;% \n  ungroup() %&gt;% \n  mutate( artist_ranking = dense_rank( desc(n_popular_artist) ) ) %&gt;% \n  filter( artist_ranking &lt;= 10) \n  \n# boxplot\nggplot(Q1c,\n       aes(x = pos, y = fct_reorder(artist_name, -artist_ranking)) ) +\n  geom_boxplot() +\n  stat_summary(\n    fun = mean,\n    color = 'red'\n  )\n\n\n\n# histogram\nggplot(Q1c) +\n  geom_histogram(aes(x = pos), binwidth = 1) + \n  facet_grid(fct_reorder(artist_name, artist_ranking) ~ .  , switch = \"y\") +\n  theme(strip.text.y.left = element_text(angle = 0))"
  },
  {
    "objectID": "posts/NFL/nfl.html",
    "href": "posts/NFL/nfl.html",
    "title": "NFL",
    "section": "",
    "text": "Let’s analyze the spotify data:\n\nNFL2022_stuffs &lt;- read_csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')"
  },
  {
    "objectID": "posts/NYC Restaurant Inspection/Restaurant.html",
    "href": "posts/NYC Restaurant Inspection/Restaurant.html",
    "title": "NYC Restaurant Inspection",
    "section": "",
    "text": "restaurant &lt;- read_csv(\"https://bcdanl.github.io/data/DOHMH_NYC_Restaurant_Inspection.csv\")\n\n\nggplot(restaurant) +\n  geom_boxplot(aes(x = SCORE, y = GRADE, fill = GRADE) ) +\n  facet_grid( `CRITICAL FLAG` ~ . )\n\n\n\n\n\nggplot(restaurant) +\n  geom_histogram(aes(x = SCORE), binwidth = 1 ) +\n  facet_wrap( `CRITICAL FLAG` ~ GRADE, scales = 'free' )\n\n\n\n\n\nggplot(restaurant) +\n  geom_bar(aes(x = `CRITICAL FLAG`,\n               y = after_stat(prop), group = 1)) +\n  facet_grid( GRADE ~ BORO )"
  },
  {
    "objectID": "posts/NFL/nfl.html#summary-statistics",
    "href": "posts/NFL/nfl.html#summary-statistics",
    "title": "NFL",
    "section": "1.1 Summary Statistics",
    "text": "1.1 Summary Statistics\n\nrmarkdown::paged_table(NFL2022_stuffs)\n\n\n\n  \n\n\n\n\nskim(NFL2022_stuffs) %&gt;% \n  select(-n_missing)\n\n\nData summary\n\n\nName\nNFL2022_stuffs\n\n\nNumber of rows\n50147\n\n\nNumber of columns\n10\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n8\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\nskim_variable\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\ngame_id\n1.00\n13\n15\n0\n284\n0\n\n\nposteam\n0.93\n2\n3\n0\n32\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nplay_id\n1.00\n2057.86\n1194.22\n1\n1039.00\n2034.00\n3065.50\n5523\n▇▇▇▅▁\n\n\ndrive\n0.99\n11.48\n6.59\n1\n6.00\n11.00\n17.00\n35\n▇▇▇▂▁\n\n\nweek\n1.00\n9.91\n5.61\n1\n5.00\n10.00\n15.00\n22\n▇▆▆▆▃\n\n\nqtr\n1.00\n2.58\n1.14\n1\n2.00\n3.00\n4.00\n5\n▆▇▆▇▁\n\n\ndown\n0.83\n2.00\n1.00\n1\n1.00\n2.00\n3.00\n4\n▇▆▁▃▂\n\n\nhalf_seconds_remaining\n1.00\n796.94\n564.41\n0\n255.00\n774.00\n1285.00\n1800\n▇▅▅▅▅\n\n\npass\n1.00\n0.45\n0.50\n0\n0.00\n0.00\n1.00\n1\n▇▁▁▁▆\n\n\nwp\n0.99\n0.51\n0.29\n0\n0.29\n0.52\n0.73\n1\n▆▆▇▆▆"
  },
  {
    "objectID": "posts/NFL/nfl.html#q2a",
    "href": "posts/NFL/nfl.html#q2a",
    "title": "NFL",
    "section": "1.2 Q2a",
    "text": "1.2 Q2a\nIn data.frame, NFL2022_stuffs, remove observations for which values of posteam is missing\n\nNFL2022_stuffs &lt;- na.omit(NFL2022_stuffs[!is.na(NFL2022_stuffs$posteam), ])\n\nrmarkdown::paged_table(NFL2022_stuffs)"
  },
  {
    "objectID": "posts/NFL/nfl.html#q2b",
    "href": "posts/NFL/nfl.html#q2b",
    "title": "NFL",
    "section": "1.3 Q2b",
    "text": "1.3 Q2b\nSummarize the mean value of pass for each posteam when all of the following conditions hold: 1. wp is greater than 20% and less than 75% 2. down is less than or equal to 2 3. half_seconds_remaining is greater than 120\n\nfiltered_data &lt;- NFL2022_stuffs[NFL2022_stuffs$wp &gt; 0.20 & NFL2022_stuffs$wp &lt; 0.75 &\n                                  NFL2022_stuffs$down &lt;= 2 &\n                                  NFL2022_stuffs$half_seconds_remaining &gt; 120, ]\nmean_pass_by_posteam &lt;- aggregate(filtered_data$pass, by=list(filtered_data$posteam), FUN=mean)\ncolnames(mean_pass_by_posteam) &lt;- c(\"posteam\", \"mean_pass\")\nprint(mean_pass_by_posteam)\n\n   posteam mean_pass\n1      ARI 0.5528455\n2      ATL 0.4000000\n3      BAL 0.5198330\n4      BUF 0.6043956\n5      CAR 0.4578947\n6      CHI 0.4198312\n7      CIN 0.6567460\n8      CLE 0.4908722\n9      DAL 0.4742647\n10     DEN 0.4930796\n11     DET 0.4906542\n12      GB 0.5088496\n13     HOU 0.4793388\n14     IND 0.4938525\n15     JAX 0.5207921\n16      KC 0.6376068\n17      LA 0.5104895\n18     LAC 0.6076190\n19      LV 0.4921569\n20     MIA 0.5334646\n21     MIN 0.5555556\n22      NE 0.5208333\n23      NO 0.4214464\n24     NYG 0.5153846\n25     NYJ 0.5061728\n26     PHI 0.5801217\n27     PIT 0.4796296\n28     SEA 0.5662188\n29      SF 0.4805726\n30      TB 0.5529412\n31     TEN 0.4342723\n32     WAS 0.4054581"
  },
  {
    "objectID": "posts/NFL/nfl.html#q2c",
    "href": "posts/NFL/nfl.html#q2c",
    "title": "NFL",
    "section": "1.4 Q2c",
    "text": "1.4 Q2c\nProvide both (1) a ggplot code with geom_point() using the resulting data.frame in Q2b and (2) a simple comments to describe the mean value of pass for each posteam. In the ggplot, reorder the posteam categories based on the mean value of pass in ascending or in descending order\n\nlibrary(ggplot2)\n\nmean_pass_by_posteam$posteam &lt;- factor(mean_pass_by_posteam$posteam, \n                                       levels = mean_pass_by_posteam$posteam[order(mean_pass_by_posteam$mean_pass)])\n\n\nggplot(mean_pass_by_posteam, aes(x = mean_pass, y = posteam)) +\n  geom_point() +\n  labs(x = \"Percent of Pass Plays\", y = \"Team with Possession\", title = \"Team vs Percent of Pass Plays\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  },
  {
    "objectID": "posts/NFL/nfl.html#q2d",
    "href": "posts/NFL/nfl.html#q2d",
    "title": "NFL",
    "section": "1.5 Q2d",
    "text": "1.5 Q2d\nConsider the following data.frame:\n\nNFL2022_epa &lt;- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\nrmarkdown::paged_table(NFL2022_epa)\n\n\n\n  \n\n\n\nCreate the data.frame, NFL2022_stuffs_EPA, that includes:\n\nAll the variables in the data.frame, NFL2022_stuffs\nThe variables, passer, receiver, and epa, from the data.frame, NFL2022_epa by joining the two data.frames\n\nIn the resulting data.frame, NFL2022_stuffs_EPA, remove observations with NA in passer\n\nNFL2022_epa &lt;- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\nNFL2022_stuffs_EPA &lt;- merge(NFL2022_stuffs, NFL2022_epa[, c(\"game_id\", \"passer\", \"receiver\", \"epa\")], by = \"game_id\")\nNFL2022_stuffs_EPA &lt;- NFL2022_stuffs_EPA[complete.cases(NFL2022_stuffs_EPA$passer), ]\n\nrmarkdown::paged_table(NFL2022_stuffs_EPA)"
  },
  {
    "objectID": "posts/NFL/nfl.html#q2e",
    "href": "posts/NFL/nfl.html#q2e",
    "title": "NFL",
    "section": "1.6 Q2e",
    "text": "1.6 Q2e\nProvide both (1) a single ggplot and (2) a simple comment to describe the NFL weekly trend of weekly mean value of epa for each of the following two passers: 1. \"J.Allen\" 2. \"P.Mahomes\"\n\nlibrary(ggplot2)\n\nselected_passers &lt;- c(\"J.Allen\", \"P.Mahomes\")\nfiltered_data &lt;- NFL2022_stuffs_EPA[NFL2022_stuffs_EPA$passer %in% selected_passers, ]\nfiltered_data$week &lt;- factor(filtered_data$week, levels = unique(filtered_data$week))\nweekly_mean_epa &lt;- aggregate(epa ~ week + passer, data = filtered_data, FUN = mean)\n\nggplot(weekly_mean_epa, aes(x = week, y = epa, color = passer, group = passer)) +\n  geom_line() +\n  labs(x = \"Week\", y = \"Weekly Mean EPA\", title = \"NFL Weekly Trend of Mean EPA for J.Allen and P.Mahomes\") +\n  theme_minimal()\n\n\n\n\nPatrick Mahomes generally has a higher weekly mean epa than Josh Allen"
  },
  {
    "objectID": "posts/NFL/nfl.html#q2f",
    "href": "posts/NFL/nfl.html#q2f",
    "title": "NFL",
    "section": "1.7 Q2f",
    "text": "1.7 Q2f\nCalculate the difference between the mean value of epa for \"J.Allen\" the mean value of epa for \"P.Mahomes\" for each value of week.\n\nselected_passers &lt;- c(\"J.Allen\", \"P.Mahomes\")\nfiltered_data &lt;- NFL2022_stuffs_EPA[NFL2022_stuffs_EPA$passer %in% selected_passers, ]\nmean_epa_by_week &lt;- aggregate(epa ~ week + passer, data = filtered_data, FUN = mean)\nepa_diff &lt;- reshape(mean_epa_by_week, idvar = \"week\", timevar = \"passer\", direction = \"wide\")\nepa_diff$epa_diff &lt;- epa_diff$epa.J.Allen - epa_diff$epa.P.Mahomes\nprint(epa_diff)\n\n   week epa.J.Allen epa.P.Mahomes    epa_diff\n1     1  0.52963415    0.69840404 -0.16876989\n2     2  0.48691617    0.14841216  0.33850401\n3     3  0.16932725    0.24559401 -0.07626677\n4     4  0.19104682    0.27137549 -0.08032867\n5     5  0.62742248    0.30228470  0.32513777\n6     6  0.30652151    0.13313721  0.17338430\n7     8  0.22419910            NA          NA\n8     9 -0.20799939    0.09646711 -0.30446651\n9    10  0.16051785    0.58904325 -0.42852541\n10   11  0.19206366    0.36503570 -0.17297205\n11   12  0.09828258    0.24726968 -0.14898710\n12   13  0.33021344    0.20622354  0.12398990\n13   14 -0.06207961    0.13106472 -0.19314433\n14   15  0.25693067    0.32195856 -0.06502788\n15   16  0.02143551    0.12156763 -0.10013212\n16   18  0.20865931    0.17297609  0.03568322\n17   19 -0.20950326            NA          NA\n18   20 -0.04289048    0.27933023 -0.32222071\n25    7          NA    0.70130690          NA\n34   17          NA    0.19847047          NA\n37   21          NA    0.19610416          NA\n38   22          NA    0.55937371          NA"
  },
  {
    "objectID": "posts/NFL/nfl.html#q2g",
    "href": "posts/NFL/nfl.html#q2g",
    "title": "NFL",
    "section": "1.8 Q2g",
    "text": "1.8 Q2g\nSummarize the resulting data.frame in Q2d, with the following four variables:\n\nposteam: String abbreviation for the team with possession.\npasser: Name of the player who passed a ball to a receiver by initially taking a three-step drop, and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks.)\nmean_epa: Mean value of epa in 2022 for each passer\nn_pass: Number of observations for each passer\n\nThen find the top 10 NFL passers in 2022 in terms of the mean value of epa, conditioning that n_pass must be greater than or equal to the third quantile level of n_pass\n\nlibrary(dplyr)\nsummary_data &lt;- NFL2022_stuffs_EPA %&gt;%\n  group_by(posteam, passer) %&gt;%\n  summarise(mean_epa = mean(epa),\n            n_pass = n())\nthird_quantile &lt;- quantile(summary_data$n_pass, 0.75)\ntop_passers &lt;- summary_data %&gt;%\n  filter(n_pass &gt;= third_quantile) %&gt;%\n  top_n(10, mean_epa) %&gt;%\n  arrange(desc(mean_epa))\nprint(top_passers)\n\n# A tibble: 183 × 4\n# Groups:   posteam [32]\n   posteam passer      mean_epa n_pass\n   &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;  &lt;int&gt;\n 1 CHI     K.Cousins      0.474   3676\n 2 CHI     J.Goff         0.473   4036\n 3 SEA     B.Purdy        0.466   4736\n 4 LA      J.Garoppolo    0.458   4088\n 5 JAX     P.Mahomes      0.456   5237\n 6 BUF     J.Brissett     0.442   3744\n 7 CAR     J.Goff         0.359   3900\n 8 IND     T.Lawrence     0.326   4428\n 9 TEN     T.Lawrence     0.290   6042\n10 MIN     J.Goff         0.288   6299\n# ℹ 173 more rows"
  },
  {
    "objectID": "project.html#visualization",
    "href": "project.html#visualization",
    "title": "DANL Project",
    "section": "2.2 Visualization",
    "text": "2.2 Visualization\nWhat five players have the most goals scored against?\n\nlibrary(dplyr)\ntop_5_goalies &lt;- Goalies %&gt;%\n  arrange(desc(PostGA)) %&gt;%\n  head(5)\n\nspecific_goalies1 &lt;- c(\"hrudeke01\", \"bannemu01\", \"daleyjo01\", \"hextaro01\", \n                       \"fleurma01\")\ntop_5_data &lt;- subset(Goalies, playerID %in% specific_goalies1)\n\n\nggplot(top_5_data, aes(x = playerID, fill = PostGA)) +\n  geom_bar()\n\n\n\n\nThe player with playerID “bannemu01” showed the highest number of goals scored against\nWhat five players have the most postseason wins?\n\ntop_5_goalies_wins &lt;- Goalies %&gt;%\n  arrange(desc(PostW)) %&gt;%\n  head(5)\nprint(top_5_goalies_wins)\n\n   playerID year stint tmID lgID GP  Min  W  L T.OL ENG SHO  GA   SA PostGP\n1 barrato01 1991     1  PIT  NHL 57 3329 25 22    9   2   1 196 1702     21\n2 belfoed01 1998     1  DAL  NHL 61 3536 35 15    9   0   5 117 1373     23\n3 brodema01 1994     1  NJD  NHL 40 2184 19 11    6   1   3  89  908     20\n4 brodema01 1999     1  NJD  NHL 72 4312 43 20    8   3   6 161 1797     23\n5 brodema01 2002     1  NJD  NHL 73 4374 41 23    9   4   9 147 1706     24\n  PostMin PostW PostL PostT PostENG PostSHO PostGA PostSA\n1    1233    16     5    NA       1       1     58    622\n2    1544    16     7    NA       1       3     43    617\n3    1222    16     4    NA       0       3     34    463\n4    1450    16     7    NA       0       2     39    537\n5    1491    16     8    NA       0       7     41    622\n\nspecific_goalies2 &lt;- c(\"barrato01\", \"belfoed01\", \"brodema01\", \"fleurma01\", \n                       \"fuhrgr01\")\ntop_5_data2 &lt;- subset(Goalies, playerID %in% specific_goalies2)\n\n\nggplot(top_5_data2, aes(x = playerID, fill = PostW)) +\n  geom_bar()\n\n\n\n\nThe player with playerID “barrato01” showed the highest number of postseason wins\nWhat is the relationship between goalie shutouts and wins?\n\nlibrary(ggplot2)\nggplot(data = Goalies) +\n  geom_point(mapping = aes(x = SHO, y = W))\n\n\n\n\nThere is a positive relationship between goalie shutouts and wins. So, if a goalie continues to have shutouts, the teams chances of wining increase signifitcantly"
  }
]